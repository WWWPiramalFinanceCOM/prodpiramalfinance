import{locateMeInteraction as I,selectBranchInteraction as C}from"../../dl.min.js";import{getMetadata as x,loadScript as D}from"../../scripts/aem.min.js";import{branchURLStr as l,fetchAPI as E,selectBranchDetails as L}from"../../scripts/scripts.min.js";import M from"./sort.min.js";import{initMap as q,searchBranchByURL as B}from"./branchlocator-api.min.js";import{setLocationObj as n}from"./branchlocator-init.min.js";import{renderCity as p,renderState as m}from"./branchlocator-render.min.js";import{innerBranchFunc as f}from"./branchlocator.min.js";const A="AIzaSyDx1HwnCLjSSIm_gADqaYAZhSBh7hgcwTQ";export const dropDownStateCity=t=>t.reduce((e,o)=>{const a=o.State.charAt(0).toUpperCase()+o.State.slice(1).toLowerCase();return e[a]||(e[a]=[]),e[a].push(o),e},{});export async function onloadBranchLocator(t){try{await B()?console.log("Search By URL"):n.lat&&n.lng?await S(n.lat,n.lng):b(),v();const e=j();await g(e),_(t,e)}catch(e){console.error("Error in onloadBranchLocator:",e)}}function b(){const{geoInfo:t,getExcelData:e}=n;t.city="Mumbai",t.state="Maharashtra",t.country="India";const o=e[t.state]?.find(a=>a.City===t.city);o&&Object.assign(n,{lat:o.Latitude,lng:o.Longitude,"geoInfo.location":o.Location})}async function v(){const{geoInfo:t}=n,e=w(t.state),o=w(t.city);if(!location.href.includes("author")&&!location.href.includes(e)){var a=t.state&&t.city?l(t.location,t.city,t.state,"shorthand"):l(t.location,t.city,t.state,"shorthandstate");(await fetch(a)).ok?location.href=a:location.href=x("lang-path")+"/branch-locator/maharashtra/mumbai"}}function j(){return n.geoInfo.state&&!n.geoInfo.city?N(n.getExcelData):u(n.getExcelData[n.geoInfo.state])}function u(t=[]){var e=t.filter(function(o){return o.City.toLowerCase()===n.geoInfo.city.toLowerCase()});return e}async function g(t){await D(`https://maps.googleapis.com/maps/api/js?key=${A}`),R(n.lat,n.lng,t)}async function _(t,e){const o=t.closest(".section");bizStateDD(n.getExcelData,t),bizCityDD(n.getExcelData,t),h(t),p(t,n),m(t,n);const a=await f(e);if(o.querySelector(".title-to-show").textContent=`Find all ${n.geoInfo.city} Branches here`,o.querySelector(".branch-list-wrapper").innerHTML=a,L(t),n.geoInfo.state&&!n.geoInfo.city){const c=o.querySelector(".city-wrapper");c.classList.remove("dp-none"),c.querySelector("input").focus()}}async function S(t,e){try{const o=await $(t,e),{results:a}=await o.json();if(!a||a.length<2)throw new Error("No results found");const c=a[1].address_components,r={city:"",state:"",country:""};for(const i of c){const s=i.types[0];if(s==="locality"?r.city=i.long_name:s==="administrative_area_level_1"?r.state=i.long_name:s==="country"&&(r.country=i.long_name),r.city&&r.state&&r.country)break}n.geoInfo=r}catch(o){throw console.error("Error in getStateCity:",o),o}}function $(t,e){return new Promise((o,a)=>{E("GET",`https://maps.googleapis.com/maps/api/geocode/json?latlng=${t},${e}&sensor=true&key=AIzaSyDx1HwnCLjSSIm_gADqaYAZhSBh7hgcwTQ`).then(c=>{o(c)}).catch(c=>{o(c)})})}function O(t,e,o,a){const r=d(o-t),i=d(a-e),s=Math.sin(r/2)*Math.sin(r/2)+Math.cos(d(t))*Math.cos(d(o))*Math.sin(i/2)*Math.sin(i/2);return 6371*(2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s)))}function d(t){return t*(Math.PI/180)}function R(t,e,o){const a=t&&e?new google.maps.LatLng(t,e):new google.maps.LatLng(22,75),c=t&&e?10:5,r=new google.maps.Map(document.querySelector(".map-container"),{center:a,zoom:c});U(r,o,t,e)}function U(t,e,o,a){e.forEach(c=>{new google.maps.Marker({position:new google.maps.LatLng(c.Latitude,c.Longitude),title:c.Address,map:t})}),o&&a&&new google.maps.Marker({position:new google.maps.LatLng(o,a),title:"You are here",icon:{url:"../image/location-pin.svg",size:new google.maps.Size(48,48),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(24,42)},map:t})}export function bizStateDD(t){n.stateLi=Object.keys(t).map(e=>`<a href="${l("","",e,"shorthandstate")}"><li class="state-option option" data-info="${e}">${e}</li></a>`).join("")}export function bizCityDD(t){n.cityhash={},n.cityLi=Object.values(t[n.geoInfo.state]).reduce((e,{City:o})=>(n.cityhash[o]||(n.cityhash[o]=o,e+=`<a href="${l("",o,n.geoInfo.state,"shorthand")}"><li class="city-option option" data-info="${o}">${o}</li></a>`),e),"")}function h(t){const e=t.closest(".section");e.querySelector(".default-state-selected").textContent=n.geoInfo.state,e.querySelector(".default-city-selected").textContent=n.geoInfo.city}export function onClickState(t){t.closest(".section").querySelectorAll(".state-option").forEach(e=>{e.addEventListener("click",o=>z(o,t))})}export function onClickCity(t){t.closest(".section").querySelectorAll(".city-option").forEach(e=>{e.addEventListener("click",o=>P(o,t))})}export function locateMeClick(t){t.closest(".section").querySelector(".btn-locate").addEventListener("click",o=>T(o,t));try{t.closest(".section").querySelector(".btn-locate-details").addEventListener("click",Y)}catch(o){console.warn(o)}}function w(t){return t.charAt(0).toLowerCase()+t.slice(1).replaceAll(" ","-").toLowerCase()}async function z(t,e){try{const o=t.target.dataset.info;n.geoInfo.state=o;const a=Object.values(n.getExcelData[o])[0];n.geoInfo.city=a.City,n.lat=a.Latitude,n.lng=a.Longitude,bizCityDD(n.getExcelData),h(e),p(e);const c=u(n.getExcelData[n.geoInfo.state]);await g(c);const r=await f(c);e.closest(".section").querySelector(".branch-list-wrapper").innerHTML=r,t.target.closest("ul").classList.add("dp-none")}catch(o){console.error("Error in handleStateClick:",o)}}async function P(t,e){try{const o=t.target.dataset.info;n.geoInfo.city=o;const a=Object.values(n.getExcelData[n.geoInfo.state]).find(s=>s.City===o);n.lat=a.Latitude,n.lng=a.Longitude,h(e);const c=u(n.getExcelData[n.geoInfo.state]);await g(c);const r=await f(c),i=e.closest(".section");i.querySelector(".branch-list-wrapper").innerHTML=r,i.querySelector(".title-to-show").textContent=`Find all ${o} Branches here`,t.target.closest("ul").classList.add("dp-none")}catch(o){console.error("Error in handleCityClick:",o)}}async function T(t,e){try{I();const{lat:o,lng:a}=await M();if(!o||!a){F(e,t.target);return}Object.assign(n,{lat:o,lng:a});let c=n.geoInfo.city,r=n.geoInfo.state;await S(o,a),n.geoInfo.state=n.geoInfo.state?K(n.geoInfo.state):n.geoInfo.state;let i=u(n.getExcelData[n.geoInfo.state]);i.length==0&&(Object.assign(n.geoInfo,{state:r,city:c}),i=u(n.getExcelData[n.geoInfo.state])),await g(i);const[s]=i;q(s.Latitude,s.Longitude);const y=O(o,a,s.Latitude,s.Longitude);k(e,s,y),await H(e),G(e,i),L(e)}catch(o){console.error("Error in handleLocateMeClick:",o)}}function F(t,e){t.closest(".section").querySelector(".nearest-txt").textContent="Kindly enable your Location and Refresh the page",e.closest(".btn-locate > span").classList.add("dsp-none")}async function H(t){bizStateDD(n.getExcelData,t),bizCityDD(n.getExcelData,t),h(t),p(t,n),m(t,n)}async function G(t,e){const o=await f(e);t.closest(".section").querySelector(".branch-list-wrapper").innerHTML=o}function Y(t){try{const e=t.target.closest(".branch-info-container"),o={cta_position:e?.querySelector(".nearest-txt")?.textContent.trim(),branch_name:e?.querySelector(".branch-deatils .branch-addr")?.textContent.trim().split("-")[1]?.trim()};C(o)}catch(e){console.warn("Error in handleBranchDetailClick:",e)}}function k(t,e,o){const a=t.closest(".section");a.querySelector(".branch-addr").textContent=`Branch - ${e.Location}`,a.querySelector(".branch-distance").textContent=`Distance - ${o.toFixed(1)} km`,a.querySelector(".title-to-show").textContent=`Find all ${n.geoInfo.city} Branches here`,a.querySelector(".btn-locate").classList.add("dp-none"),a.querySelector(".btn-locate-details").classList.remove("dp-none"),a.querySelector(".branch-deatils").classList.remove("dp-none"),n.geoInfo.locationcode=e["Location Code"],n.geoInfo.location=e.Location;const c=l(n.geoInfo.location,n.geoInfo.city,n.geoInfo.state,"loans",n.geoInfo.locationcode);a.querySelector(".btn-locate-details").setAttribute("href",c)}function N(t){return Object.values(t[n.geoInfo.state])}function K(t){return t.charAt(0).toUpperCase()+t.slice(1).toLowerCase()}
